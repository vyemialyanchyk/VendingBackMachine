apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'liquibase'
//apply plugin: 'application'
apply plugin: 'war'

war {
	baseName = 'vending-back-machine-ws'
	archiveName = 'vending-back-machine-ws.war'
}
//mainClassName = 'com.vending.back.machine.app.Application'

configurations {
	providedRuntime
}

buildscript {
	repositories {
		maven { url 'https://repo.spring.io/libs-release' }
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath 'org.liquibase:liquibase-gradle-plugin:1.2.1'
		classpath 'mysql:mysql-connector-java:5.1.40'
		classpath files(['src/main/resources'])
	}
}

dependencies {
	compile('mysql:mysql-connector-java:6.0.6')
	compile('org.springframework:spring-web')
	compile('org.springframework.ws:spring-ws-core')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-websocket')

	compile('org.springframework.security:spring-security-jwt')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('net.lingala.zip4j:zip4j:1.3.2')

	compile('commons-io:commons-io:2.5')
	compile('org.apache.commons:commons-lang3:3.5')
	compile('org.apache.httpcomponents:httpclient:4.5.3')

	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8')

	compile('org.aspectj:aspectjrt:1.8.10')
	compile('org.aspectj:aspectjtools:1.8.10')

	compile('org.mybatis:mybatis:3.4.4')
	compile('org.mybatis:mybatis-spring:1.3.1')
	compile('org.mybatis:mybatis-ehcache:1.0.0')

	compile('com.github.javaplugs:mybatis-java-time:0.2')
	compile('org.apache.velocity:velocity:1.7')
	compile('org.slf4j:slf4j-api:1.7.22')
	compile('ch.qos.logback:logback-classic:1.1.9')

	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')

//	testCompile('com.github.springtestdbunit:spring-test-dbunit:1.3.0')
//	testCompile('org.springframework.security:spring-security-test')
//	testCompile('org.liquibase:liquibase-core:3.5.3')
//	testCompile('org.dbunit:dbunit:2.5.3')
//	testCompile('org.hsqldb:hsqldb:2.3.4')
//	testCompile('org.unitils:unitils-core:3.4.2')

	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	providedRuntime("org.apache.tomcat:tomcat-dbcp:9.0.0.M21")
}

task copyDbScripts(type: Copy) {
	from 'build/resources/main/db/changelog/setup/'
	into '../release/db'
	include 'roles.sql'
}
task copyExtJars(type: Copy) {
	from findJar('mysql')
	from findTestJar('liquibase-core')
	into '../release/ext'
	rename('liquibase-core-3.5.3', 'liquibase')
}

task release(dependsOn: ['copyDbScripts', 'copyExtJars']) {
}
build {
	dependsOn release
}

clean {
	delete "../release/ext"
	delete "../release/db"
	delete "../release"
}

bootRepackage {
	enabled = false
}

project.ext {
	db_url = project.hasProperty('db_url') ? project.getProperties().get('db_url') : "jdbc:mysql://localhost:3306/vbm_db"
	db_username = project.hasProperty('db_username') ? project.getProperties().get('db_username') : "root"
	db_password = project.hasProperty('db_password') ? project.getProperties().get('db_password') : "root"
	sql_to_execute = project.hasProperty('sql_to_execute') ? project.getProperties().get('sql_to_execute') : "select * from vbm_user"
}

liquibase {
	activities {
		main {
			changeLogFile "db/changelog/db.changelog-master.xml"
			url project.ext.get('db_url')
			username project.ext.get('db_username')
			password project.ext.get('db_password')
		}
	}

	// runList = project.ext.runList
	runList = 'main'
}

def findTestJar(prefix) {
	configurations.testCompile.filter { it.name.startsWith(prefix) }
}

def findJar(prefix) {
	configurations.compile.filter { it.name.startsWith(prefix) }
}

bootRun {
	jvmArgs = ["-Dlog4j.configurationFile=log4j2.xml", "-Djsse.enableSNIExtension=false"]
}
